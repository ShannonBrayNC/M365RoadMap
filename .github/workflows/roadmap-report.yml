name: Generate Microsoft 365 Roadmap Report

on:
  workflow_dispatch:
    inputs:
      skip_generate:
        description: "Skip API generation and use sample file (first-run safe)"
        required: true
        default: "true"
        type: choice
        options:
          - "true"
          - "false"
      ids:
        description: "Comma-separated Roadmap IDs (used only when skip_generate=false)"
        required: false
        default: "498159"
      report_title:
        description: "Title for output files (no spaces)"
        required: false
        default: "roadmap_report"
      model:
        description: "OpenAI model (default: gpt-4o; you can override to gpt-5)"
        required: false
        default: "gpt-4o"
      months:
        description: "Months back from today to include (1..6) OR leave blank to use since/until"
        required: false
        default: "3"
      since:
        description: "Start date (YYYY-MM-DD). If set and 'until' blank, defaults to +6 months."
        required: false
        default: ""
      until:
        description: "End date (YYYY-MM-DD)"
        required: false
        default: ""
      include_instances:
        description: "Include Cloud Instances (e.g., DoD,GCC,GCC High,Worldwide (Standard Multi-Tenant))"
        required: false
        default: "GCC"
      exclude_instances:
        description: "Exclude Cloud Instances (comma-separated)"
        required: false
        default: ""

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install requirements (if requirements.txt exists)
        shell: bash
        run: |
          if [ -f requirements.txt ]; then
            python -m pip install --upgrade pip
            pip install -r requirements.txt
          else
            echo "No requirements.txt found. Skipping pip install."
          fi

      - name: Make scripts executable & normalize line endings
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get install -y dos2unix
          dos2unix scripts/*.sh || true
          chmod +x scripts/*.sh

      - name: Ensure sample report exists (first-run safety)
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get install -y dos2unix
          dos2unix scripts/write_sample.sh || true
          chmod +x scripts/write_sample.sh
          if [ ! -f output/roadmap_report.md ]; then
            bash scripts/write_sample.sh
          else
            echo "Sample already present; skipping."
          fi

      - name: Generate Markdown report via API (conditional)
        if: ${{ github.event.inputs.skip_generate == 'false' }}
        shell: bash
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_BASE_URL: ${{ secrets.OPENAI_BASE_URL }}
          OPENAI_MODEL: ${{ github.event.inputs.model || 'gpt-4o' }}
          OPENAI_ORG_ID: ${{ secrets.OPENAI_ORG_ID }}
        run: |
          if [ -z "${OPENAI_API_KEY:-}" ]; then
            echo "❌ Missing OPENAI_API_KEY secret. Set it in Settings → Secrets → Actions." >&2
            exit 1
          fi
          IDS="${{ github.event.inputs.ids }}"
          TITLE="${{ github.event.inputs.report_title || 'roadmap_report' }}"
          mkdir -p output
          bash scripts/generate_report.sh "$IDS" "prompts/system_multi_id.md" "output/${TITLE}.md"


      - name: Upload report artifacts
        uses: actions/upload-artifact@v4
        with:
          name: roadmap-report
          path: |
            output/${{ github.event.inputs.report_title || 'roadmap_report' }}.md
            output/${{ github.event.inputs.report_title || 'roadmap_report' }}.csv
            output/${{ github.event.inputs.report_title || 'roadmap_report' }}.json
          if-no-files-found: warn
